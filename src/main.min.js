import{auth}from"./js/fb.min";import{TABS_ENABLED,TABS,DEFAULT_TAB}from"./js/config.min.js";import{signInWithEmailAndPassword,onAuthStateChanged}from"firebase/auth";import"./style.min.css";import"./css/excel.min.css";let userRole=null;function createLoginForm(){const loginForm=document.createElement("div");loginForm.id="loginForm",loginForm.className="container",loginForm.innerHTML='\n    <img src="/assets/maquilalogo.png" alt="Logo industrias formex" width="150">\n    <h2>Inicio de sesión</h2>\n    <div id="loginError" class="error-message"></div>\n    <form id="login">\n      <div class="form-group">\n        <label for="email">Correo electrónico</label>\n        <input type="email" id="email" required />\n      </div>\n      <div class="form-group">\n        <label for="password">Contraseña</label>\n        <input type="password" id="password" required />\n      </div>\n      <button type="submit" class="btn">Iniciar sesión</button>\n    </form>\n  ',document.body.appendChild(loginForm),document.getElementById("login").addEventListener("submit",(e=>{e.preventDefault();const email=document.getElementById("email").value,password=document.getElementById("password").value,errorDiv=document.getElementById("loginError");errorDiv.textContent="",signInWithEmailAndPassword(auth,email,password).catch((error=>{let errorMessage="Error al iniciar sesión";switch(error.code){case"auth/invalid-credential":errorMessage="Correo o contraseña incorrectos";break;case"auth/user-disabled":errorMessage="Esta cuenta ha sido deshabilitada";break;case"auth/user-not-found":errorMessage="No existe una cuenta con este correo";break;case"auth/too-many-requests":errorMessage="Demasiados intentos. Por favor, intente más tarde"}errorDiv.textContent=errorMessage}))}))}document.addEventListener("DOMContentLoaded",(function(){const loadingEl=document.getElementById("loading"),contentEl=document.getElementById("content");onAuthStateChanged(auth,(async user=>{let loginFormEl;if(loadingEl&&loadingEl.remove(),user){try{const claims=(await user.getIdTokenResult(!0)).claims;!claims||"admin"!==claims.roles&&"upload"!==claims.roles?userRole="user":(userRole=claims.roles,console.log("User role:",userRole))}catch(error){console.error("Error getting user claims:",error),userRole="user"}const{loadInventory:loadInventory,loadCatalog:loadCatalog,loadUpload:loadUpload}=await import("./js/excel.min.js");loginFormEl=document.getElementById("loginForm"),loginFormEl&&loginFormEl.remove(),contentEl.style.display="block";try{const response=await fetch("/pages/excel.html"),html=await response.text();contentEl.innerHTML=html;const rfcElement=document.getElementById("rfc"),immexElement=document.getElementById("immex"),addrElement=document.getElementById("financialAddr");if(rfcElement&&import.meta.env.VITE_RFC&&(rfcElement.textContent=import.meta.env.VITE_RFC),immexElement&&import.meta.env.VITE_IMMEX&&(immexElement.textContent=import.meta.env.VITE_IMMEX),addrElement&&import.meta.env.VITE_FINANCIAL_ADDR){const addrValue=import.meta.env.VITE_FINANCIAL_ADDR.replace(/^'|'$/g,"");addrElement.textContent=addrValue}if(loadInventory(),TABS_ENABLED){const container=document.querySelector("#tableContainer"),tabButtonsContainer=document.getElementById("tabButtons");function createTabButton(tabId,tabConfig){const button=document.createElement("button");return button.id=tabId,button.className="tab-btn",button.textContent=tabConfig.label,button.dataset.tab=tabId,button}for(const tabId in TABS)if(TABS[tabId].enabled)if("upload"===tabId){if("admin"===userRole||"upload"===userRole){const button=createTabButton(tabId,TABS[tabId]);tabButtonsContainer.appendChild(button)}}else{const button=createTabButton(tabId,TABS[tabId]);tabButtonsContainer.appendChild(button)}const defaultTabButton=document.getElementById(DEFAULT_TAB);if(defaultTabButton){defaultTabButton.classList.add("active");const defaultConfig=TABS[DEFAULT_TAB];defaultConfig.cssClass&&container.classList.add(defaultConfig.cssClass)}tabButtonsContainer.addEventListener("click",(async event=>{const target=event.target;if(!target.classList.contains("tab-btn"))return;const clickedTabId=target.id,tabConfig=TABS[clickedTabId];if(!tabConfig)return void console.warn(`No configuration found for tab: ${clickedTabId}`);document.querySelectorAll(".tab-btn").forEach((btn=>{btn.classList.remove("active")})),target.classList.add("active");for(const id in TABS)TABS[id].cssClass&&container.classList.remove(TABS[id].cssClass),(TABS[id].removeClasses||[]).forEach((cls=>{container.classList.remove(cls)}));tabConfig.cssClass&&container.classList.add(tabConfig.cssClass),document.getElementById("tableContainer").innerHTML="";const loadingMessage=document.getElementById("loadingMessage");if(loadingMessage&&(loadingMessage.innerHTML="",loadingMessage.style.display="none"),tabConfig.handler)try{const handlers={loadInventory:loadInventory,loadCatalog:loadCatalog,loadUpload:loadUpload};"function"==typeof handlers[tabConfig.handler]?await handlers[tabConfig.handler]():console.warn(`Handler '${tabConfig.handler}' is not a function`)}catch(error){console.error(`Error loading tab ${clickedTabId}:`,error);const errorMessage=document.createElement("div");errorMessage.className="error-message",errorMessage.textContent="Error loading content",container.appendChild(errorMessage)}else console.warn(`No handler found for tab: ${clickedTabId}`)}))}}catch(error){console.error("Error loading content:",error),contentEl.innerHTML="Error loading content"}}else userRole=null,contentEl.style.display="none",loginFormEl=document.getElementById("loginForm"),loginFormEl||(loadingEl&&loadingEl.remove(),createLoginForm())}))}));